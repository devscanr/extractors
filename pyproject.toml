[project]
name = "extractors"
version = "0.55.0"
description = ""
authors = [
  {name = "DevScanr Team", email = "info@devscanr.com"}
]
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
  "markdown == 3.7.*",
  "spacy == 3.8.*",
  "lingua-language-detector == 2.0.*",
  "urlextract == 1.9.*",
  "beautifulsoup4 == 4.12.*",
  "emoji == 2.14.*",
  "poetry == 2.1.*",
]

[project.optional-dependencies]
mypy = ["mypy == 1.14.*"]
pytest = ["pytest == 8.3.*"]
ruff = ["ruff == 0.9.*"]
types-beautifulsoup4 = ["types-beautifulsoup4 == 4.12.0.*"]
types-markdown = ["types-markdown == 3.7.0.*"]
# jupyterlab = ["jupyterlab == 4.2.*"]
psutil = ["psutil == 6.1.*"]

# spacy-universal-sentence-encoder = "^0.4.6"

[tool.poetry]
package-mode = true

[tool.poe.env]
PYTHONPATH = "."

[tool.poe.tasks]
build = "poetry build --format=wheel"
tc = "poetry run mypy ."
test = "poetry run pytest --disable-warnings"
lint = "poetry run ruff check"

[tool.mypy]
strict = true
disallow_untyped_calls = false
no_implicit_reexport = false
exclude = [
  "^ignore",
]

[tool.ruff.lint]
select = ["F", "B", "UP", "RUF"]
ignore = ["E701", "E711", "E712", "E731", "E741", "F541", "RUF001", "RUF002", "RUF003", "RUF021"]
per-file-ignores = {"__init__.py" = ["F403"]}

[tool.pytest.ini_options]
testpaths = ["extractors"]
# addopts = "--ignore=ignore"
python_files = "*_test.py"
#python_classes = ["*__*"]
#python_functions = ["*__*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
